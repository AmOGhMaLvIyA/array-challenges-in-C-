#include<iostream> 
using namespace std;  
int main(){     
    int mx=-1999999;
    int n;
    cin>>n;
    int arr[n];
    for (int i = 0; i <n; i++)
    {
        cin>>arr[i];
    }
    for (int i = 0; i < n; i++)
    {
        mx=max(mx,arr[i]);
    }
    cout<<mx<<endl;
    return 0;
 }
subarrays and subsequence
#include<iostream>
using namespace std;
int main(){
    
    int n;
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];
    }
    int sum=0;
    for (int i = 0; i < n; i++)
    {
        sum=0;
        for (int j = i; j < n; j++)
        {
            sum+=arr[j];
            cout<<sum<<endl;
        }
    }
return 0;
    }
 GOOGLE KICKSTART
problem 1
#include<iostream>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];   
    }
    int ans=2;
    int pd=arr[1]-arr[0];
    int j=2;
    int curr=2;

    while (j<n)
    {
        if (pd== arr[j]-arr[j-1])
        {
            curr++;
        }
        else{
        pd=arr[j]-arr[j-1];
        curr=2;
        }
        ans=max(ans,curr);
        j++;
    }
    cout<<ans<<endl;
    return 0;
}

problem 2
#include<iostream>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n+1];
    arr[n]=-1;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int mx=-1;
    if(n==1){
        cout<<"1"<<endl;
        return 0;
    }
    int rec=0;
    for(int i=0;i<n;i++){
        if(arr[i]>mx && arr[i]>arr[i+1]){
            rec++;
        }
        mx=max(mx,arr[i]);
    }
    cout<<rec<<endl;
    return 0;
}
